---
export interface Props {
  icon: string;
  title: string;
  description: string;
  features: string[];
  gradient: string;
}

const { icon, title, description, features, gradient } = Astro.props;
---

<div class="group relative bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 overflow-hidden">
  <!-- Gradient Background -->
  <div class={`absolute inset-0 bg-gradient-to-br ${gradient} opacity-0 group-hover:opacity-5 transition-opacity duration-300`}></div>
  
  <!-- Card Content -->
  <div class="relative p-8">
    <!-- Icon -->
    <div class="text-4xl mb-4">{icon}</div>
    
    <!-- Title -->
    <h3 class="text-xl font-bold text-gray-900 mb-4 group-hover:text-transparent group-hover:bg-gradient-to-r group-hover:from-primary-600 group-hover:to-purple-600 group-hover:bg-clip-text transition-all duration-300">
      {title}
    </h3>
    
    <!-- Description -->
    <p class="text-gray-600 mb-6 leading-relaxed">
      {description}
    </p>
    
    <!-- Features List -->
    <ul class="space-y-2">
      {features.map((feature) => (
        <li class="flex items-start space-x-3">
          <svg class="w-5 h-5 text-green-500 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
          </svg>
          <span class="text-sm text-gray-700">{feature}</span>
        </li>
      ))}
    </ul>
  </div>
  
  <!-- Hover Border Effect -->
  <div class={`absolute inset-0 border-2 border-transparent group-hover:border-gradient-to-r group-hover:${gradient} rounded-2xl opacity-0 group-hover:opacity-20 transition-opacity duration-300 pointer-events-none`}></div>
</div>
